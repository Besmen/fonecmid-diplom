
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.РеализацияТоваровУслуг) Тогда
		
        КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
        КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.РеализацияТоваровУслуг.ПолноеИмя();
        КомандаСоздатьНаОсновании.Представление = ОбщегоНазначения.ПредставлениеОбъекта(Метаданные.Документы.РеализацияТоваровУслуг);
        КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;

	Возврат Неопределено;
	
КонецФункции  

//+ВКМ
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Акт об оказанных услугах
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АктОбОказанныхУслугах";
	КомандаПечати.Представление = НСтр("ru = 'Акт об оказанных услугах'");
	КомандаПечати.Порядок = 5;
	
КонецПроцедуры 

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "АктОбОказанныхУслугах");
	Если ПечатнаяФорма <> Неопределено Тогда
	    ПечатнаяФорма.ТабличныйДокумент = ВКМ_АктОбОказанныхУслугах(МассивОбъектов, ОбъектыПечати);
	    ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Акт об оказанных услугах'");
	    ПечатнаяФорма.ПолныйПутьКМакету = "Документ.РеализацияТоваровУслуг.ВКМ_ПФ_MXL_АктОбОказанныхУслугах";
	КонецЕсли;

КонецПроцедуры
//-ВКМ
#КонецОбласти 

#Область СлужебныеПроцедурыИФункции
//+ВКМ
Функция ВКМ_АктОбОказанныхУслугах(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РеализацияТоваровУслуг.ВКМ_ПФ_MXL_АктОбОказанныхУслугах");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
	               |	РеализацияТоваровУслуг.Номер КАК Номер,
	               |	РеализацияТоваровУслуг.Дата КАК Дата,
	               |	РеализацияТоваровУслуг.Организация.Представление КАК Организация,
	               |	РеализацияТоваровУслуг.Контрагент.Представление КАК Контрагент,
	               |	РеализацияТоваровУслуг.Договор.Представление КАК Договор,
	               |	РеализацияТоваровУслуг.СуммаДокумента КАК СуммаДокумента,
	               |	РеализацияТоваровУслуг.Товары.(
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма,
	               |		Номенклатура.Представление КАК Номенклатура
	               |	) КАК Товары,
	               |	РеализацияТоваровУслуг.Услуги.(
	               |		Номенклатура.Представление КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Услуги
	               |ИЗ
	               |	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	               |ГДЕ
	               |	РеализацияТоваровУслуг.Ссылка В(&Ссылка)";
	
	Запрос.УстановитьПараметр("Ссылка", МассивОбъектов);
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");  
	ОбластьШапкаТБ = Макет.ПолучитьОбласть("ШапкаТБ");
	ОбластьТБ = Макет.ПолучитьОбласть("ТБ");
	ОбластьИтог = Макет.ПолучитьОбласть("Итог");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал"); 
	
	ТабличныйДокумент.Очистить();
	
	ВставлятьРазделительСтраниц = Ложь;
	
	Пока Выборка.Следующий() Цикл 
		
		Если ВставлятьРазделительСтраниц Тогда 
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьЗаголовок.Параметры.Номер = ВКМ_УбратьЛидирующиеНули(Выборка.Номер);
		ОбластьЗаголовок.Параметры.Дата = Формат(Выборка.Дата, "ДЛФ=DD");
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовок); 
		
		ОбластьШапка.Параметры.Заполнить(Выборка);
		
		ТабличныйДокумент.Вывести(ОбластьШапка, Выборка.Уровень());
		
		ТабличныйДокумент.Вывести(ОбластьШапкаТБ);

		ИтогТовары = 0;
		ИтогУслуги = 0;
		НомерСтроки = 0;
		
		ВыборкаТовары = Выборка.Товары.Выбрать();
		
		Пока ВыборкаТовары.Следующий() Цикл

			НомерСтроки = НомерСтроки + 1;
			ОбластьТБ.Параметры.НомерСтроки = НомерСтроки;
			ОбластьТБ.Параметры.Номенклатура = ВыборкаТовары.Номенклатура;
			ОбластьТБ.Параметры.Количество = ВыборкаТовары.Количество;
			ОбластьТБ.Параметры.Цена = ВыборкаТовары.Цена;
			ОбластьТБ.Параметры.Сумма = ВыборкаТовары.Сумма;

			ИтогТовары = ИтогТовары + ВыборкаТовары.Сумма; 
			ТабличныйДокумент.Вывести(ОбластьТБ, ВыборкаТовары.Уровень()); 
			
		КонецЦикла;
		
		ВыборкаУслуги = Выборка.Услуги.Выбрать();
		
		Пока ВыборкаУслуги.Следующий() Цикл

			НомерСтроки = НомерСтроки + 1;
			ОбластьТБ.Параметры.НомерСтроки = НомерСтроки;
			ОбластьТБ.Параметры.Номенклатура = ВыборкаУслуги.Номенклатура;
			ОбластьТБ.Параметры.Количество = ВыборкаУслуги.Количество;
			ОбластьТБ.Параметры.Цена = ВыборкаУслуги.Цена;
			ОбластьТБ.Параметры.Сумма = ВыборкаУслуги.Сумма;
			
			ИтогУслуги = ИтогУслуги + ВыборкаУслуги.Сумма;
			ТабличныйДокумент.Вывести(ОбластьТБ, ВыборкаУслуги.Уровень()); 
			
		КонецЦикла;
		
		Итог = ИтогТовары + ИтогУслуги;
		
		ОбластьИтог.Параметры.Итог = Итог;
		ОбластьИтог.Параметры.КоличествоСтрок = НомерСтроки; 
		ОбластьИтог.Параметры.СуммаПрописью = ЧислоПрописью(Итог, "Л=ru_RU;ДП=Истина", "рубль,рубля,рублей,м,копейка,копейки,копеек,ж,2");
		
		ТабличныйДокумент.Вывести(ОбластьИтог);     
		
		ТабличныйДокумент.Вывести(ОбластьПодвал); 
		
		ВставлятьРазделительСтраниц = Истина;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало,
			ОбъектыПечати, Выборка.Ссылка);

	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции 

Функция ВКМ_УбратьЛидирующиеНули(Номер) 
    Если Лев(Номер, 1) = "0" Тогда
        Возврат ВКМ_УбратьЛидирующиеНули(Прав(Номер, СтрДлина(Номер) - 1)); 
    Иначе
        Возврат Номер;
    КонецЕсли;
КонецФункции
//-ВКМ	
#КонецОбласти



#КонецЕсли